diff -u ./usr/src/fglrx-core-15.302/drmP.h ./usr/src/fglrx-core-15.302/drmP.h
--- ./usr/src/fglrx-core-15.302/drmP.h	2016-09-08 21:13:23.000000000 +0300
+++ ./usr/src/fglrx-core-15.302/drmP.h	2016-09-09 01:06:49.819562636 +0300
@@ -65,6 +65,9 @@
 #include <asm/io.h>
 #include <asm/mman.h>
 #include <asm/uaccess.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,3,0)
+#undef CONFIG_MTRR
+#endif
 #ifdef CONFIG_MTRR
 #include <asm/mtrr.h>
 #endif
diff -u ./usr/src/fglrx-core-15.302/firegl_public.c ./usr/src/fglrx-core-15.302/firegl_public.c
--- ./usr/src/fglrx-core-15.302/firegl_public.c	2016-09-08 21:13:23.000000000 +0300
+++ ./usr/src/fglrx-core-15.302/firegl_public.c	2016-09-09 01:08:46.688397231 +0300
@@ -93,7 +93,7 @@
    and they use different config options. These options can only be enabled
    on x86_64 with newer 2.6 kernels (2.6.23 for intel, 2.6.26 for amd). 
 */
-#if defined(CONFIG_AMD_IOMMU) || defined(CONFIG_DMAR)
+#if defined(CONFIG_AMD_IOMMU) || defined(CONFIG_INTEL_IOMMU) || defined(CONFIG_DMAR)
     #define FIREGL_DMA_REMAPPING
 #endif
 
@@ -136,6 +136,9 @@
 #include <asm/processor.h>
 #include <asm/tlbflush.h> // for flush_tlb_page
 #include <asm/cpufeature.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,3,0)
+#undef CONFIG_MTRR
+#endif
 #ifdef CONFIG_MTRR
 #include <asm/mtrr.h>
 #endif
@@ -631,8 +634,13 @@
 
     len = snprintf(buf, request, "%d\n", major);
 #else
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,3,0)
+    seq_printf(m, "%d\n", major);
+    len = 0;
+#else
     len = seq_printf(m, "%d\n", major);
 #endif
+#endif
 
     KCL_DEBUG1(FN_FIREGL_PROC, "return len=%i\n",len);
 
@@ -1714,6 +1722,9 @@
 
 #if defined(__i386__) 
 #ifndef __HAVE_ARCH_CMPXCHG
+#ifndef __xg
+#define __xg(x) ((volatile long *)(x))
+#endif
 static inline 
 unsigned long __fgl_cmpxchg(volatile void *ptr, unsigned long old,            
                         unsigned long new, int size)                      
@@ -6455,8 +6466,12 @@
       if (!(fpu->state->xsave.xsave_hdr.xstate_bv & XSTATE_FP))
 #else
 	  copy_xregs_to_kernel(&fpu->state.xsave);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,4,0)
+      if (!(fpu->state.xsave.header.xfeatures & XFEATURE_MASK_FP))
+#else
       if (!(fpu->state.xsave.header.xfeatures & XSTATE_FP))
 #endif
+#endif
          return 1;
    } else if (static_cpu_has(X86_FEATURE_FXSR)) {
 #if LINUX_VERSION_CODE < KERNEL_VERSION(4,2,0)
@@ -6506,8 +6521,12 @@
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3,15,0)
          KCL_fpu_save_init(cur_task);
 #else
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,2,0)
+         copy_fpregs_to_fpstate(&cur_task->thread.fpu);
+#else
          __save_init_fpu(cur_task);
 #endif
+#endif
     else
          clts();
 
@@ -6532,8 +6551,12 @@
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3,15,0)
         KCL_fpu_save_init(cur_task);
 #else
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,2,0)
+        copy_fpregs_to_fpstate(&cur_task->thread.fpu);
+#else
         __save_init_fpu(cur_task);
 #endif
+#endif
     else
          clts();
 #endif
diff -u ./usr/src/fglrx-core-15.302/kcl_str.c ./usr/src/fglrx-core-15.302/kcl_str.c
--- ./usr/src/fglrx-core-15.302/kcl_str.c	2016-09-08 21:13:23.000000000 +0300
+++ ./usr/src/fglrx-core-15.302/kcl_str.c	2016-09-09 00:58:30.704043636 +0300
@@ -173,7 +173,11 @@
                                   const char* s2,
                                   KCL_TYPE_SizeSigned count)
 {
-    return strnicmp(s1, s2, count);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0)
+     return strnicmp(s1, s2, count);
+#else
+    return strncasecmp(s1, s2, count);
+#endif
 }
 
 /** \brief Locate character in string
diff -u ./usr/src/fglrx-core-15.302/make.sh ./usr/src/fglrx-core-15.302/make.sh
--- ./usr/src/fglrx-core-15.302/make.sh	2016-09-08 21:13:23.000000000 +0300
+++ ./usr/src/fglrx-core-15.302/make.sh	2016-09-09 00:58:58.204235517 +0300
@@ -57,7 +57,7 @@
 
 if [ -z "${CC}" ]; then 
 	CC=gcc
-	set_GCC_version
+#	set_GCC_version
 fi
 
 # ==============================================================
